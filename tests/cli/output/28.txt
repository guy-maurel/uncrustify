log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(parse_next : rule is 'disable_processing_nl_cont'
log_rule(tokenize : rule is 'newlines'
brace_cleanup : orig_line is 1, orig_col is 1, text() is 'struct'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 1, orig_col is 1, type is STRUCT, tos is 0, TOS.type is EOF, TOS.stage is NONE, []
parse_cleanup : orig_line is 1, type is STRUCT, text() is 'struct'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
brace_cleanup : orig_line is 1, orig_col is 8, text() is 'TelegramIndex'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 1, orig_col is 8, type is TYPE, tos is 0, TOS.type is EOF, TOS.stage is NONE, []
parse_cleanup : orig_line is 1, type is TYPE, text() is 'TelegramIndex'
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
brace_cleanup : orig_line is 1, orig_col is 21, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 2, orig_col is 1, text() is '{'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 2, orig_col is 1, type is BRACE_OPEN, tos is 0, TOS.type is EOF, TOS.stage is NONE, []
parse_cleanup : orig_line is 2, type is BRACE_OPEN, text() is '{'
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 3
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 2, orig_col is 2, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 3, orig_col is 1, text() is 'TelegramIndex'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 1, type is WORD, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is WORD, text() is 'TelegramIndex'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
brace_cleanup : orig_line is 3, orig_col is 14, text() is '('
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 14, type is PAREN_OPEN, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is PAREN_OPEN, text() is '('
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
brace_cleanup : orig_line is 3, orig_col is 15, text() is 'const'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 15, type is QUALIFIER, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is QUALIFIER, text() is 'const'
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 1
brace_cleanup : orig_line is 3, orig_col is 21, text() is 'char'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 21, type is TYPE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is TYPE, text() is 'char'
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 2
brace_cleanup : orig_line is 3, orig_col is 25, text() is '*'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 25, type is PTR_TYPE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is PTR_TYPE, text() is '*'
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 3
brace_cleanup : orig_line is 3, orig_col is 27, text() is 'pN'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 27, type is WORD, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is WORD, text() is 'pN'
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 3
parse_cleanup : frm.stmt_count is 6, frm.expr_count is 4
brace_cleanup : orig_line is 3, orig_col is 29, text() is ','
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 29, type is COMMA, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is COMMA, text() is ','
parse_cleanup : frm.stmt_count is 6, frm.expr_count is 4
parse_cleanup : frm.stmt_count is 7, frm.expr_count is 5
brace_cleanup : orig_line is 3, orig_col is 31, text() is 'unsigned'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 31, type is TYPE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is TYPE, text() is 'unsigned'
parse_cleanup : frm.stmt_count is 7, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 8, frm.expr_count is 1
brace_cleanup : orig_line is 3, orig_col is 40, text() is 'long'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 40, type is TYPE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is TYPE, text() is 'long'
parse_cleanup : frm.stmt_count is 8, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 9, frm.expr_count is 2
brace_cleanup : orig_line is 3, orig_col is 45, text() is 'nI'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 45, type is WORD, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is WORD, text() is 'nI'
parse_cleanup : frm.stmt_count is 9, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 10, frm.expr_count is 3
brace_cleanup : orig_line is 3, orig_col is 47, text() is ')'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 47, type is PAREN_CLOSE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is PAREN_CLOSE, text() is ')'
parse_cleanup : frm.stmt_count is 10, frm.expr_count is 3
parse_cleanup : frm.stmt_count is 11, frm.expr_count is 4
brace_cleanup : orig_line is 3, orig_col is 49, text() is ':'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 3, orig_col is 49, type is COLON, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 3, type is COLON, text() is ':'
parse_cleanup : frm.stmt_count is 11, frm.expr_count is 4
parse_cleanup : frm.stmt_count is 12, frm.expr_count is 5
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 3, orig_col is 50, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 4, orig_col is 1, text() is 'pTelName'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 4, orig_col is 1, type is WORD, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 4, type is WORD, text() is 'pTelName'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
brace_cleanup : orig_line is 4, orig_col is 9, text() is '('
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 4, orig_col is 9, type is PAREN_OPEN, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 4, type is PAREN_OPEN, text() is '('
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
brace_cleanup : orig_line is 4, orig_col is 10, text() is 'pN'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 4, orig_col is 10, type is WORD, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 4, type is WORD, text() is 'pN'
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 1
brace_cleanup : orig_line is 4, orig_col is 12, text() is ')'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 4, orig_col is 12, type is PAREN_CLOSE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 4, type is PAREN_CLOSE, text() is ')'
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 2
brace_cleanup : orig_line is 4, orig_col is 13, text() is ','
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 4, orig_col is 13, type is COMMA, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 4, type is COMMA, text() is ','
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 3
brace_cleanup : orig_line is 4, orig_col is 14, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 5, orig_col is 1, text() is 'nTelIndex'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 5, orig_col is 1, type is WORD, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 5, type is WORD, text() is 'nTelIndex'
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 6, frm.expr_count is 1
brace_cleanup : orig_line is 5, orig_col is 10, text() is '('
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 5, orig_col is 10, type is PAREN_OPEN, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 5, type is PAREN_OPEN, text() is '('
parse_cleanup : frm.stmt_count is 6, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 7, frm.expr_count is 2
brace_cleanup : orig_line is 5, orig_col is 11, text() is 'n'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 5, orig_col is 11, type is WORD, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 5, type is WORD, text() is 'n'
parse_cleanup : frm.stmt_count is 7, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 8, frm.expr_count is 1
brace_cleanup : orig_line is 5, orig_col is 12, text() is ')'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 5, orig_col is 12, type is PAREN_CLOSE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 5, type is PAREN_CLOSE, text() is ')'
parse_cleanup : frm.stmt_count is 8, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 9, frm.expr_count is 2
brace_cleanup : orig_line is 5, orig_col is 13, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 6, orig_col is 1, text() is '{'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 6, orig_col is 1, type is BRACE_OPEN, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 6, type is BRACE_OPEN, text() is '{'
parse_cleanup : frm.stmt_count is 9, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 10, frm.expr_count is 3
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 6, orig_col is 2, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 7, orig_col is 1, text() is '}'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 7, orig_col is 1, type is BRACE_CLOSE, tos is 2, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 7, type is BRACE_CLOSE, text() is '}'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 7, orig_col is 2, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 9, orig_col is 1, text() is '~'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 9, orig_col is 1, type is INV, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 9, type is INV, text() is '~'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
brace_cleanup : orig_line is 9, orig_col is 2, text() is 'TelegramIndex'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 9, orig_col is 2, type is WORD, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 9, type is WORD, text() is 'TelegramIndex'
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 1
brace_cleanup : orig_line is 9, orig_col is 15, text() is '('
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 9, orig_col is 15, type is PAREN_OPEN, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 9, type is PAREN_OPEN, text() is '('
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 2
brace_cleanup : orig_line is 9, orig_col is 16, text() is ')'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 9, orig_col is 16, type is PAREN_CLOSE, tos is 2, TOS.type is PAREN_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 9, type is PAREN_CLOSE, text() is ')'
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 1
brace_cleanup : orig_line is 9, orig_col is 17, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 10, orig_col is 1, text() is '{'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 10, orig_col is 1, type is BRACE_OPEN, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 10, type is BRACE_OPEN, text() is '{'
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 10, orig_col is 2, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 11, orig_col is 1, text() is '}'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 11, orig_col is 1, type is BRACE_CLOSE, tos is 2, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 11, type is BRACE_CLOSE, text() is '}'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 11, orig_col is 2, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 13, orig_col is 1, text() is 'const'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 13, orig_col is 1, type is QUALIFIER, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 13, type is QUALIFIER, text() is 'const'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
brace_cleanup : orig_line is 13, orig_col is 7, text() is 'char'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 13, orig_col is 7, type is TYPE, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 13, type is TYPE, text() is 'char'
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
brace_cleanup : orig_line is 13, orig_col is 11, text() is '*'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 13, orig_col is 11, type is PTR_TYPE, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 13, type is PTR_TYPE, text() is '*'
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 3
brace_cleanup : orig_line is 13, orig_col is 13, text() is 'const'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 13, orig_col is 13, type is QUALIFIER, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 13, type is QUALIFIER, text() is 'const'
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 3
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 4
brace_cleanup : orig_line is 13, orig_col is 19, text() is 'pTelName'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 13, orig_col is 19, type is WORD, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 13, type is WORD, text() is 'pTelName'
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 4
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 5
brace_cleanup : orig_line is 13, orig_col is 27, text() is ';'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 13, orig_col is 27, type is SEMICOLON, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 13, type is SEMICOLON, text() is ';'
parse_cleanup : frm.stmt_count is 5, frm.expr_count is 5
parse_cleanup : frm.stmt_count is 6, frm.expr_count is 6
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 13, orig_col is 28, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 14, orig_col is 1, text() is 'unsigned'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 14, orig_col is 1, type is TYPE, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 14, type is TYPE, text() is 'unsigned'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
brace_cleanup : orig_line is 14, orig_col is 10, text() is 'long'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 14, orig_col is 10, type is TYPE, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 14, type is TYPE, text() is 'long'
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
brace_cleanup : orig_line is 14, orig_col is 15, text() is 'nTelIndex'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 14, orig_col is 15, type is WORD, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 14, type is WORD, text() is 'nTelIndex'
parse_cleanup : frm.stmt_count is 2, frm.expr_count is 2
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 3
brace_cleanup : orig_line is 14, orig_col is 24, text() is ';'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 14, orig_col is 24, type is SEMICOLON, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 14, type is SEMICOLON, text() is ';'
parse_cleanup : frm.stmt_count is 3, frm.expr_count is 3
parse_cleanup : frm.stmt_count is 4, frm.expr_count is 4
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 14, orig_col is 25, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
brace_cleanup : orig_line is 15, orig_col is 1, text() is '}'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 15, orig_col is 1, type is BRACE_CLOSE, tos is 1, TOS.type is BRACE_OPEN, TOS.stage is NONE, []
parse_cleanup : orig_line is 15, type is BRACE_CLOSE, text() is '}'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 15, orig_col is 2, text() is ';'
brace_cleanup : pc->level is 0, pp_level is 0
parse_cleanup : orig_line is 15, orig_col is 2, type is SEMICOLON, tos is 0, TOS.type is EOF, TOS.stage is NONE, []
parse_cleanup : orig_line is 15, type is SEMICOLON, text() is ';'
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
parse_cleanup : frm.stmt_count is 1, frm.expr_count is 1
parse_cleanup : frm.stmt_count is 0, frm.expr_count is 0
brace_cleanup : orig_line is 15, orig_col is 3, text() is ''
brace_cleanup : pc->level is 0, pp_level is 0
parameter_pack_cleanup : orig_line is 1, orig_col is 1, text() is 'struct'
parameter_pack_cleanup : orig_line is 1, orig_col is 8, text() is 'TelegramIndex'
parameter_pack_cleanup : orig_line is 1, orig_col is 21, text() is ''
parameter_pack_cleanup : orig_line is 2, orig_col is 1, text() is '{'
parameter_pack_cleanup : orig_line is 2, orig_col is 2, text() is ''
parameter_pack_cleanup : orig_line is 3, orig_col is 1, text() is 'TelegramIndex'
parameter_pack_cleanup : orig_line is 3, orig_col is 14, text() is '('
parameter_pack_cleanup : orig_line is 3, orig_col is 15, text() is 'const'
parameter_pack_cleanup : orig_line is 3, orig_col is 21, text() is 'char'
parameter_pack_cleanup : orig_line is 3, orig_col is 25, text() is '*'
parameter_pack_cleanup : orig_line is 3, orig_col is 27, text() is 'pN'
parameter_pack_cleanup : orig_line is 3, orig_col is 29, text() is ','
parameter_pack_cleanup : orig_line is 3, orig_col is 31, text() is 'unsigned'
parameter_pack_cleanup : orig_line is 3, orig_col is 40, text() is 'long'
parameter_pack_cleanup : orig_line is 3, orig_col is 45, text() is 'nI'
parameter_pack_cleanup : orig_line is 3, orig_col is 47, text() is ')'
parameter_pack_cleanup : orig_line is 3, orig_col is 49, text() is ':'
parameter_pack_cleanup : orig_line is 3, orig_col is 50, text() is ''
parameter_pack_cleanup : orig_line is 4, orig_col is 1, text() is 'pTelName'
parameter_pack_cleanup : orig_line is 4, orig_col is 9, text() is '('
parameter_pack_cleanup : orig_line is 4, orig_col is 10, text() is 'pN'
parameter_pack_cleanup : orig_line is 4, orig_col is 12, text() is ')'
parameter_pack_cleanup : orig_line is 4, orig_col is 13, text() is ','
parameter_pack_cleanup : orig_line is 4, orig_col is 14, text() is ''
parameter_pack_cleanup : orig_line is 5, orig_col is 1, text() is 'nTelIndex'
parameter_pack_cleanup : orig_line is 5, orig_col is 10, text() is '('
parameter_pack_cleanup : orig_line is 5, orig_col is 11, text() is 'n'
parameter_pack_cleanup : orig_line is 5, orig_col is 12, text() is ')'
parameter_pack_cleanup : orig_line is 5, orig_col is 13, text() is ''
parameter_pack_cleanup : orig_line is 6, orig_col is 1, text() is '{'
parameter_pack_cleanup : orig_line is 6, orig_col is 2, text() is ''
parameter_pack_cleanup : orig_line is 7, orig_col is 1, text() is '}'
parameter_pack_cleanup : orig_line is 7, orig_col is 2, text() is ''
parameter_pack_cleanup : orig_line is 9, orig_col is 1, text() is '~'
parameter_pack_cleanup : orig_line is 9, orig_col is 2, text() is 'TelegramIndex'
parameter_pack_cleanup : orig_line is 9, orig_col is 15, text() is '('
parameter_pack_cleanup : orig_line is 9, orig_col is 16, text() is ')'
parameter_pack_cleanup : orig_line is 9, orig_col is 17, text() is ''
parameter_pack_cleanup : orig_line is 10, orig_col is 1, text() is '{'
parameter_pack_cleanup : orig_line is 10, orig_col is 2, text() is ''
parameter_pack_cleanup : orig_line is 11, orig_col is 1, text() is '}'
parameter_pack_cleanup : orig_line is 11, orig_col is 2, text() is ''
parameter_pack_cleanup : orig_line is 13, orig_col is 1, text() is 'const'
parameter_pack_cleanup : orig_line is 13, orig_col is 7, text() is 'char'
parameter_pack_cleanup : orig_line is 13, orig_col is 11, text() is '*'
parameter_pack_cleanup : orig_line is 13, orig_col is 13, text() is 'const'
parameter_pack_cleanup : orig_line is 13, orig_col is 19, text() is 'pTelName'
parameter_pack_cleanup : orig_line is 13, orig_col is 27, text() is ';'
parameter_pack_cleanup : orig_line is 13, orig_col is 28, text() is ''
parameter_pack_cleanup : orig_line is 14, orig_col is 1, text() is 'unsigned'
parameter_pack_cleanup : orig_line is 14, orig_col is 10, text() is 'long'
parameter_pack_cleanup : orig_line is 14, orig_col is 15, text() is 'nTelIndex'
parameter_pack_cleanup : orig_line is 14, orig_col is 24, text() is ';'
parameter_pack_cleanup : orig_line is 14, orig_col is 25, text() is ''
parameter_pack_cleanup : orig_line is 15, orig_col is 1, text() is '}'
parameter_pack_cleanup : orig_line is 15, orig_col is 2, text() is ';'
parameter_pack_cleanup : orig_line is 15, orig_col is 3, text() is ''
log_rule(enum_cleanup : rule is 'mod_enum_last_comma'
